<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[zhchnchn]]></title>
  <subtitle><![CDATA[Coding on the way]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://zhchnchn.github.io/"/>
  <updated>2014-11-27T15:21:12.077Z</updated>
  <id>http://zhchnchn.github.io/</id>
  
  <author>
    <name><![CDATA[Zhchnchn]]></name>
    <email><![CDATA[115063497@qq.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Markdown语法笔记]]></title>
    <link href="http://zhchnchn.github.io/2014/11/27/Markdown%E8%AF%AD%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    <id>http://zhchnchn.github.io/2014/11/27/Markdown语法笔记/</id>
    <published>2014-11-26T16:00:00.000Z</published>
    <updated>2014-11-27T15:04:51.000Z</updated>
    <content type="html"><![CDATA[<p>在Github上搭建Git Pages 博客，肯定是要用 Markdown 来写作啦，那么第一篇博文做一个 Markdown 语法的学习笔记是再合适不过了。</p>
<p>本文主要根据 <a href="https://stackedit.io/editor" target="_blank" rel="external">StackEdit</a> 编辑器首页的语法介绍以及 <a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">Cmd Markdown</a> 编辑器的 <a href="https://www.zybuluo.com/mdeditor?url=https%3A%2F%2Fwww.zybuluo.com%2Fstatic%2Feditor%2Fmd-help.markdown" target="_blank" rel="external">语法手册</a> 来写成的，感谢原作者。另外，这两个都是很出色的 Markdown 在线编辑器，推荐大家使用。</p>
<h2 id="格式">格式</h2>
<h3 id="标题">标题</h3>
<p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。</p>
<ul>
<li>类 Setext 形式是用底线的形式，多个 = （一级标题）和 - （第二阶标题）连用标注标题。</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="header">This is an H1</span></div><div class="line">===</div><div class="line"></div><div class="line"><span class="header">This is an H2</span></div><div class="line">---</div></pre></td></tr></table></figure>

<p>任何数量的 = 和 - 都可以有效果。</p>
<ul>
<li>类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如：# H1, ## H2, ### H3，#### H4。</li>
</ul>
<h3 id="内容目录">内容目录</h3>
<p>在段落中使用 <code>[TOC]</code> 可以显示全文内容的目录结构。</p>
<p><strong>NOTE:</strong> 在什么地方插入 <code>[TOC]</code> ，整篇文章的目录结构就在那个地方显示。</p>
<p>[TOC]</p>
<h3 id="注脚">注脚</h3>
<p>使用 [^keyword] 表示注脚。keyword值必须与注脚中的关键字一致。keyword值不要与其它注脚的值重复。注脚会自动编号为<a href="https://www.zybuluo.com" title="作业部落" target="_blank" rel="external">1</a>,<a href="https://stackedit.io/editor" title="StackEditor" target="_blank" rel="external">2</a>…等。</p>
<p>示例：</p>
<p>这是第一个注脚[^footnote1]示例。</p>
<p>这是第二个注脚[^footnote2]示例。</p>
<p><strong>NOTE:</strong> 可以注意到即使将注脚的文本放在这儿，在解析后显示的时候，也会显示在文章的最后面。</p>
<p>[^footnote1]: 这是第一个 <em>注脚</em> 的 <strong>文本</strong>。</p>
<p>[^footnote2]: 这是第二个 <em>注脚</em> 的 <strong>文本</strong>。</p>
<h3 id="标签">标签</h3>
<p>在编辑区任意行的行首位置输入以下格式的文字可以给当前文档添加标签：</p>
<pre><code>标签： 数学 英语 Md
</code></pre><p>或者</p>
<pre><code><span class="keyword">tags</span>： 数学 英语 Md
</code></pre><p><strong>NOTE:</strong> 标签只能添加一次，比如我这篇文档在起始处添加了标签 <code>tags: Markdown</code>,所以在该处再添加<code>tags： 数学 英语 Md</code>不会起作用。</p>
<h3 id="分隔线">分隔线</h3>
<p>你可以在一行中用3个以上的星号、减号来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p>
<pre><code><span class="keyword">*</span> <span class="keyword">*</span> <span class="keyword">*</span>
<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>
---
-----------------
</code></pre><h2 id="文本编辑">文本编辑</h2>
<h3 id="段落">段落</h3>
<p>段落在HTML中使用<code>&lt;p&gt;</code>来表示。在Markdown里面，段落的前后要有一个以上的空行（若某一行只包含空格和制表符，则该行也会被视为空行）</p>
<h3 id="区块引用（Blockquotes）">区块引用（Blockquotes）</h3>
<p>使用 &gt; 表示引用其他文章的文字。</p>
<p>示例：</p>
<blockquote>
<p>Markdown 的目标是实现「易读易写」。<br>Markdown 语法的目标是：成为一种适用于网络的书写语言。</p>
</blockquote>
<p>区块引用也可以嵌套，比如</p>
<pre><code>&gt; <span class="constant">This</span> is the first level of quoting.
<span class="input"><span class="prompt">&gt;
&gt;</span> &gt; <span class="constant">This</span> is nested blockquote.</span>
<span class="input"><span class="prompt">&gt; （NOTE：这个空行是必须的，否则下面的一行会被视为嵌套的引用）
&gt;</span> <span class="constant">Back</span> to the **first level**.</span>
</code></pre><p>显示效果：</p>
<blockquote>
<p>This is the first level of quoting.</p>
<blockquote>
<p>This is nested blockquote.</p>
</blockquote>
<p>Back to the <strong>first level</strong>.</p>
</blockquote>
<p>可以注意到，区块引用内的其它 Markdown 语法，包括标题、列表、强调等，仍然是生效的。</p>
<h3 id="粗体&amp;斜体">粗体&amp;斜体</h3>
<p>使用星号（*）和下划线（_）表示强调。单个（*）和下划线（_） 表示斜体，两个（*）和下划线（_） 表示粗体。如果你的星号（*）和下划线（_）两边都有空白的话，它们就只会被当成普通的符号。</p>
<p>示例：</p>
<pre><code>这是 <span class="keyword">*</span>斜体<span class="keyword">*</span>，这是 <span class="keyword">*</span><span class="keyword">*</span>粗体<span class="keyword">*</span><span class="keyword">*</span>。
这是 _斜体_，这是 __粗体__。
</code></pre><p>显示效果：</p>
<p>这是 <em>斜体</em>，这是 <strong>粗体</strong>。<br>这是 <em>斜体</em>，这是 <strong>粗体</strong>。</p>
<h3 id="删除线">删除线</h3>
<p>在要删除的文本前后，添加 ~~，表示删除线。</p>
<p>示例：</p>
<p><del>这是一段错误的文本。</del></p>
<h3 id="转义字符">转义字符</h3>
<p>Markdown使用反斜杠 \ 转义有特殊意义的字符。支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</p>
<pre><code>\   反斜线
`   反引号
<span class="bullet">*   </span>星号
_   底线
{}  花括号
[]  方括号
()  括弧
<span class="header">#   井字号</span>
<span class="bullet">+   </span>加号
<span class="bullet">-   </span>减号
.   英文句点
!   惊叹号
</code></pre><h2 id="链接">链接</h2>
<h3 id="外链接">外链接</h3>
<p>Markdown 支持2种形式的链接语法： <strong>行内式</strong>和<strong>参考式</strong>。</p>
<ul>
<li>行内式： 使用 [描述](URL链接地址) 为“描述”的文字增加外链接。如果还想要加上链接的 title 内容，只要在网址后面，用双引号把 title 内容包起来即可。</li>
</ul>
<p>示例：</p>
<pre><code>这是去往 [<span class="link_label">Cmd Markdown</span>](<span class="link_url">https://www.zybuluo.com "作业部落"</span>) 的链接。当鼠标放置于“Cmd Markdown”之上时，会弹出"作业部落"的提示文字。
</code></pre><p>显示效果：</p>
<p>这是去往 <a href="https://www.zybuluo.com" title="作业部落" target="_blank" rel="external">Cmd Markdown</a> 的链接。当鼠标放置于“Cmd Markdown”之上时，会弹出”作业部落”的提示文字。</p>
<ul>
<li>参考式： 是在链接文字的方括号后面再接上另一个方括号，在第二个方括号里面要填入用以辨识链接的标记。</li>
</ul>
<p>链接标签可以有字母、数字、空白和标点符号，但是并不区分大小写。</p>
<p>这个标记的链接内容的定义，可以紧随其后，也可以放在文章的任意位置。链接内容定义的形式为：<br>[链接文字]+冒号+一个以上的空格或制表符+链接的网址+空格+title内容（可选，可以用单引号、双引号或是括弧包裹）。</p>
<p>示例：</p>
<pre><code>这是去往 [<span class="link_label">Cmd Markdown</span>][<span class="link_reference">1</span>] 的链接。
这是去往 [<span class="link_label">Stack Edit</span>][<span class="link_reference">2</span>] 的链接。

[<span class="link_reference">1</span>]:<span class="link_url"> https://www.zybuluo.com "作业部落"</span><span class="link_url">
[2]: https://stackedit.io/editor (StackEditor)</span>
</code></pre><p>显示效果：</p>
<p>这是去往 <a href="https://www.zybuluo.com" title="作业部落" target="_blank" rel="external">Cmd Markdown</a> 的链接。<br>这是去往 <a href="https://stackedit.io/editor" title="StackEditor" target="_blank" rel="external">Stack Edit</a> 的链接。</p>
<h3 id="自动链接">自动链接</h3>
<p>Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动把它转成链接。</p>
<p>示例：</p>
<pre><code>&lt;http<span class="variable">s:</span>//www.google.<span class="keyword">com</span>/&gt;
</code></pre><p>显示效果：</p>
<p><a href="https://www.google.com/" target="_blank" rel="external">https://www.google.com/</a></p>
<h3 id="链接图片">链接图片</h3>
<p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： <strong>行内式</strong>和<strong>参考式</strong>。<br>行内式语法： 使用 ![图片描述](图片URL链接地址) 插入图片。<br>参考式语法： 使用 ![图片描述][id] 插入图片。</p>
<p>从上面的语法可以看出，图片链接与外链接非常相似，只是在最前面多了一个！号。到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 <img> 标签。</p>
<p><strong>NOTE:</strong> [图片描述] 的文字并不会显示出来，但为了清晰起见，最好加上。</p>
<p>示例：</p>
<p><img src="http://zhchnchn.qiniudn.com/Image/Markdown/UploadDemo.png" alt="Script Error Demo"></p>
<h3 id="内嵌图标">内嵌图标</h3>
<p>在文档中输入 <code>&lt;i class=&quot;icon-XXX&quot; icon-2x&gt;&lt;/i&gt;</code> 即可显示内嵌图标(icon-2x表示放大2倍显示)</p>
<p>示例：</p>
<ul>
<li>显示微博的图标： <i class="icon-weibo icon-2x"></i></li>
<li>显示人人的图标： <i class="icon-renren"></i></li>
<li>显示设置图标：  <i class="icon-cog"></i></li>
<li>显示垃圾桶图标： <i class="icon-trash"></i></li>
</ul>
<p>更多的icon图标可参考 <a href="http://fortawesome.github.io/Font-Awesome/3.2.1/icons/" target="_blank" rel="external">Font Awesome</a></p>
<h3 id="嵌入音乐，视频">嵌入音乐，视频</h3>
<p>Hexo中，markdown支持html标签，我们只要在文章中插入符合html规范的代码即可。</p>
<p>对音乐和视频网站，每个音乐或视频的页面都有一个 <strong>分享</strong> 或 <strong>转贴</strong>  按钮，一般都会提供html代码或javascript代码，将其复制到文章中即可。</p>
<p>示例：</p>
<p>音乐链接：</p>
<embed src="http://www.xiami.com/widget/0_911528955_235_346_FF8719_494949/albumPlayer.swf" type="application/x-shockwave-flash" width="235" height="346" wmode="transparent">

<p>视频链接：</p>
<embed src="http://player.youku.com/player.php/sid/XMjcwNjg5MTk2/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash">

<h2 id="列表">列表</h2>
<h3 id="无序列表">无序列表</h3>
<p>使用 *，+，- 表示无序列表。</p>
<p>示例：</p>
<pre><code><span class="bullet">* </span>无序列表项 一
<span class="bullet">+ </span>无序列表项 二
<span class="bullet">- </span>无序列表项 三
</code></pre><p>显示效果：</p>
<ul>
<li>无序列表项 一</li>
</ul>
<ul>
<li>无序列表项 二</li>
</ul>
<ul>
<li>无序列表项 三</li>
</ul>
<p>无序列表还可以通过缩进可以分级。</p>
<p>示例：</p>
<ul>
<li>无序列表项1<ul>
<li>无序列表项1.1<ul>
<li>无序列表项1.1.1<ul>
<li>无序列表项1.1.1.1</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="有序列表">有序列表</h3>
<p>使用数字和点，后再跟一个空格表示有序列表。</p>
<p>示例：</p>
<pre><code><span class="bullet">1. </span>有序列表项 一
<span class="bullet">1. </span>有序列表项 二
<span class="bullet">3. </span>有序列表项 三
</code></pre><p>显示效果：</p>
<ol>
<li>有序列表项 一</li>
<li>有序列表项 二</li>
<li>有序列表项 三</li>
</ol>
<p>可以看到，即使中间的数字的不正确，也能显示出正确的有序列表。同无序列表一样，有序列表通过缩进也可以分级。</p>
<h3 id="定义列表(Definition_Lists)">定义列表(Definition Lists)</h3>
<p>名词<br>:    定义（左侧有一个可见的冒号和四个不可见的空格）</p>
<p>示例<br>:   这是代码块的解释（左侧有一个可见的冒号和四个不可见的空格）</p>
<pre><code>    代码块（左侧有八个不可见的空格）
</code></pre><h2 id="代码块">代码块</h2>
<h3 id="行内代码块">行内代码块</h3>
<p>使用 反引号`code blocks` 表示行内代码块。如果要在代码区段内也插入反引号，你可以用多个反引号来开启和结束代码区段：</p>
<p>示例：</p>
<pre><code>C++使用<span class="built_in">string</span>之前，需要 <span class="string">`#include &lt;string&gt;`</span>。
A single backtick <span class="keyword">in</span> a code span: <span class="string">``</span> <span class="string">` `</span><span class="string">`</span>
</code></pre><p>显示效果：</p>
<p>C++使用string之前，需要 <code>#include &lt;string&gt;</code>。<br>A single backtick in a code span: <code>` </code></p>
<h3 id="整段代码块">整段代码块</h3>
<p>使用 四个缩进空格，或者一个Tab，表示代码块。</p>
<p>示例：</p>
<pre><code><span class="class"><span class="keyword">class</span> <span class="title">Object</span>
</span>{
    <span class="keyword">private</span>:
    <span class="keyword">int</span> sun
    <span class="keyword">double</span> *rate;
    <span class="keyword">void</span> Func(<span class="keyword">int</span> * <span class="keyword">sum</span>);
}
</code></pre><h3 id="增强的代码块">增强的代码块</h3>
<p><a href="https://help.github.com/articles/github-flavored-markdown/" target="_blank" rel="external">GitHub Flavored Markdown(GFM)</a> 提供了一个增强的代码块语法，使用连续的三个反引号包裹代码，这样就不需要再缩进2个空格或tab了。</p>
<p>示例：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Object</span></span></div><div class="line">{</div><div class="line">   <span class="keyword">private</span>:</div><div class="line">   <span class="keyword">int</span> sun</div><div class="line">    <span class="keyword">double</span> *rate;</div><div class="line">    <span class="keyword">void</span> Func(<span class="keyword">int</span> * <span class="keyword">sum</span>);</div><div class="line">}</div></pre></td></tr></table></figure>

<p>显示效果如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Object</span></span></div><div class="line">{</div><div class="line">   <span class="keyword">private</span>:</div><div class="line">   <span class="keyword">int</span> sun</div><div class="line">    <span class="keyword">double</span> *rate;</div><div class="line">    <span class="keyword">void</span> Func(<span class="keyword">int</span> * <span class="keyword">sum</span>);</div><div class="line">}</div></pre></td></tr></table></figure>


<p>更进一步的，GFM提供了增强的代码块的语法高亮功能能，你可以在`` </p>
<figure class="highlight ``后面添加一个语言标识，它会自动检测语言种类并使用"><figcaption><span>**Highlight.js**来对代码高亮显示。对41种编程语言的语法高亮进行支持，并能显示行号。</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">C</span><span class="literal">+</span><span class="literal">+</span> <span class="comment">示例：</span></div></pre></td></tr></table></figure>

<p>cpp</p>
<h1 id="include_">include <iostream></iostream></h1>
<p>template <typename t=""> class Base {<br>    void f() {<br>        std::cerr &lt;&lt; “Base<t>::f\n”;<br>    }<br>};</t></typename></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="title">Python</span> 示例：</div></pre></td></tr></table></figure>

<p>python<br>@requires_authorization<br>class SomeClass:<br>    pass</p>
<p>if <strong>name</strong> == ‘<strong>main</strong>‘:</p>
<pre><code><span class="comment"># A comment</span>
<span class="keyword">print</span> <span class="string">'hello world'</span>
</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">### 嵌套HTML</span></div><div class="line"></div><div class="line">Markdown 语法支持在文件中嵌套 Html 标签。</div><div class="line"></div><div class="line">示例：用 Html 代码写一个表格：</div><div class="line"></div><div class="line">    <span class="variable">&lt;table&gt;</span></div><div class="line">        <span class="variable">&lt;tr&gt;</span></div><div class="line">            <span class="variable">&lt;th rowspan="2"&gt;</span>值班人员<span class="variable">&lt;/th&gt;</span></div><div class="line">            <span class="variable">&lt;th&gt;</span>星期一<span class="variable">&lt;/th&gt;</span></div><div class="line">            <span class="variable">&lt;th&gt;</span>星期二<span class="variable">&lt;/th&gt;</span></div><div class="line">            <span class="variable">&lt;th&gt;</span>星期三<span class="variable">&lt;/th&gt;</span></div><div class="line">        <span class="variable">&lt;/tr&gt;</span></div><div class="line">        <span class="variable">&lt;tr&gt;</span></div><div class="line">            <span class="variable">&lt;td&gt;</span>李强<span class="variable">&lt;/td&gt;</span></div><div class="line">            <span class="variable">&lt;td&gt;</span>张明<span class="variable">&lt;/td&gt;</span></div><div class="line">            <span class="variable">&lt;td&gt;</span>王平<span class="variable">&lt;/td&gt;</span></div><div class="line">        <span class="variable">&lt;/tr&gt;</span></div><div class="line">    <span class="variable">&lt;/table&gt;</span></div><div class="line">    </div><div class="line">上面的 Html 代码的显示效果如下：</div><div class="line"></div><div class="line"><span class="variable">&lt;table&gt;</span></div><div class="line">    <span class="variable">&lt;tr&gt;</span></div><div class="line">        <span class="variable">&lt;th rowspan="2"&gt;</span>值班人员<span class="variable">&lt;/th&gt;</span></div><div class="line">        <span class="variable">&lt;th&gt;</span>星期一<span class="variable">&lt;/th&gt;</span></div><div class="line">        <span class="variable">&lt;th&gt;</span>星期二<span class="variable">&lt;/th&gt;</span></div><div class="line">        <span class="variable">&lt;th&gt;</span>星期三<span class="variable">&lt;/th&gt;</span></div><div class="line">    <span class="variable">&lt;/tr&gt;</span></div><div class="line">    <span class="variable">&lt;tr&gt;</span></div><div class="line">        <span class="variable">&lt;td&gt;</span>李强<span class="variable">&lt;/td&gt;</span></div><div class="line">        <span class="variable">&lt;td&gt;</span>张明<span class="variable">&lt;/td&gt;</span></div><div class="line">        <span class="variable">&lt;td&gt;</span>王平<span class="variable">&lt;/td&gt;</span></div><div class="line">    <span class="variable">&lt;/tr&gt;</span></div><div class="line"><span class="variable">&lt;/table&gt;</span></div><div class="line"></div><div class="line"><span class="comment">## 表格</span></div><div class="line"></div><div class="line">第二行 `<span class="string">| -------- | ----: | :---: |` 在生成表格时是必需的，它用来分隔表头和表体，在它上面的是表头，在它下面的是表体。</span></div><div class="line"></div><div class="line">可以在虚线两侧添加冒号：来定义列的对齐方式。</div><div class="line"></div><div class="line">+ `----------` 默认是左对齐，等价于 `:---------`</div><div class="line">+ `---------:` 表示右对齐</div><div class="line">+ `:--------:` 表示右对齐</div><div class="line"></div><div class="line">示例：</div><div class="line"></div><div class="line">| Item     | Value | Qty   |</div><div class="line">| -------- | ----: | :---: |</div><div class="line">| Computer | $1600 <span class="string">|  5    |</span></div><div class="line">| Phone    | $12   <span class="string">|  12   |</span></div><div class="line">| Pipe     | $1    <span class="string">|  234  |</span></div><div class="line"></div><div class="line">## 其它</div><div class="line"></div><div class="line">### LaTex公式</div><div class="line"></div><div class="line">+ $ 表示行内公式： </div><div class="line"></div><div class="line">质能守恒方程可以用一个很简洁的方程式 $ E=mc^2 $ 来表达。</div><div class="line"></div><div class="line">+ $$ 表示整行公式：</div><div class="line"></div><div class="line">$$\sum_{i=1}^n a_i=0$$</div><div class="line"></div><div class="line">获取更多使用方法, 参阅 [MathJax](http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference)。</div><div class="line"></div><div class="line"><span class="keyword">*</span><span class="keyword">*</span>NOTE:<span class="keyword">*</span><span class="keyword">*</span> 为了确保数学表达式能在网页中正常显示，需要在你的网页中包含MathJax.js:</div></pre></td></tr></table></figure>

<p>javascript</p>
<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML">
</script>
```

<script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML">
</script>

<h3 id="UML图">UML图</h3>
<ul>
<li>序列图</li>
</ul>
<p>获取语法，参阅 <a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="external">Sequence Diagram</a></p>
<ul>
<li>流程图</li>
</ul>
<p>获取语法，参阅 <a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="external">Flow Chart</a></p>
<h2 id="参考资料">参考资料</h2>
<p><a href="https://stackedit.io/editor" target="_blank" rel="external">Stack Edit</a><br><a href="https://www.zybuluo.com/mdeditor?url=https%3A%2F%2Fwww.zybuluo.com%2Fstatic%2Feditor%2Fmd-help.markdown" target="_blank" rel="external">Cmd Markdown语法手册</a><br><a href="http://wowubuntu.com/markdown/" target="_blank" rel="external">Markdown 语法说明 (简体中文版)</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在Github上搭建Git Pages 博客，肯定是要用 Markdown 来写作啦，那么第一篇博文做一个 Markdown 语法的学习笔记是再合适不过了。</p>
<p>本文主要根据 <a href="https://stackedit.io/editor" target]]>
    </summary>
    
      <category term="Markdown" scheme="http://zhchnchn.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://zhchnchn.github.io/2014/11/23/hello-world/"/>
    <id>http://zhchnchn.github.io/2014/11/23/hello-world/</id>
    <published>2014-11-23T13:52:47.000Z</published>
    <updated>2014-11-23T13:52:47.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">trobuleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2>
<h3 id="Create_a_new_post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>

<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>
